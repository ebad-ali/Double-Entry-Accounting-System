/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package accounting.project;

import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ebad
 */



public class GeneralLedger extends javax.swing.JFrame {

    
    
    /**
     * Creates new form NewJFrame2
     */
    public GeneralLedger() {
        initComponents(); 
         this.setLocationRelativeTo(null);
         
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ledger_label = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        ledger_no = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_ledger = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jTextField_total_balance = new javax.swing.JTextField();
        jComboBox_select = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setForeground(java.awt.Color.white);

        ledger_label.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ledger_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ledger_label.setText("Ledger");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ledger_label, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 235, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ledger_label, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setPreferredSize(new java.awt.Dimension(130, 40));

        ledger_no.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        ledger_no.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ledger_no.setText("No.");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ledger_no, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ledger_no)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTable_ledger.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "     Date", "        Explanation", "    Ref", "          Debit", "          Credit", "          Balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable_ledger);
        if (jTable_ledger.getColumnModel().getColumnCount() > 0) {
            jTable_ledger.getColumnModel().getColumn(0).setResizable(false);
            jTable_ledger.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTable_ledger.getColumnModel().getColumn(1).setResizable(false);
            jTable_ledger.getColumnModel().getColumn(2).setResizable(false);
            jTable_ledger.getColumnModel().getColumn(2).setPreferredWidth(20);
            jTable_ledger.getColumnModel().getColumn(3).setResizable(false);
            jTable_ledger.getColumnModel().getColumn(4).setResizable(false);
            jTable_ledger.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Total Balance");

        jTextField_total_balance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_total_balanceActionPerformed(evt);
            }
        });

        jComboBox_select.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Please Select","Cash", "Account Recievable", "Supplies", "Equipment","Prepaid Insurance","Account Payable","Notes Payable","Salaries Payable","Accumalated Depreciation","Unearned Service Revenue","Interest Payable","Owner's Capital","Owner's Drawing","Service Revenue","Rent Revenue","Advertising Revenue","Other Revenue","Supplies Expense","Insurance Expense","Salaries Expense","Interset Expense","Rent Expense","Depreciation Expense","Advertising Expense"}));
        AutoCompletion ac = new AutoCompletion(jComboBox_select);
        jComboBox_select.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox_selectItemStateChanged(evt);
            }
        });
        jComboBox_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox_selectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(53, 53, 53)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_total_balance, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox_select, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(42, 42, 42))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jComboBox_select, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField_total_balance, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    
    private void jTextField_total_balanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_total_balanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_total_balanceActionPerformed

    private void jComboBox_selectItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox_selectItemStateChanged
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_jComboBox_selectItemStateChanged

    
    private void jComboBox_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox_selectActionPerformed
        // TODO add your handling code here:
       
        JComboBox cb = (JComboBox)evt.getSource();
        String name = (String)cb.getSelectedItem();
      
        DefaultTableModel model2 = (DefaultTableModel) jTable_ledger.getModel();
        model2.setRowCount(0);
        
        //ASSETS ACCOUNTS
        if(name.equalsIgnoreCase("Cash"))
        {
            Double balance = 0.0;
            ledger_label.setText("Cash");
            ledger_no.setText("No. 101");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp  = f.cash;
            
            for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                   balance+=temp.get(i).getbalance();
            }
            
            jTextField_total_balance.setText(""+balance);
            
        }
        else if(name.equalsIgnoreCase("Equipment"))
        {
              Double balance = 0.0;
            ledger_label.setText("Equipment");
            ledger_no.setText("No. 157");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.equipment;
            
             for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                  balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
       
        else if(name.equalsIgnoreCase("Supplies"))
        {
             Double balance = 0.0;
            ledger_label.setText("Supplies");
            ledger_no.setText("No. 126");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.supplies;
            
            for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                   balance+=temp.get(i).getbalance();
            }      
            
            jTextField_total_balance.setText(""+balance);
        }
         
        else if(name.equalsIgnoreCase("Account Recievable"))
        {
            Double balance = 0.0;
             ledger_label.setText("Account Recievable");
            ledger_no.setText("No. 120");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.account_recievable;
            
            for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                     balance+=temp.get(i).getbalance();
            } 
            jTextField_total_balance.setText(""+balance);
        }
        
        else if(name.equalsIgnoreCase("Prepaid Insurance"))
        {
            Double balance = 0.0;
            ledger_label.setText("Prepaid Insurance");
            ledger_no.setText("No. 130");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.prepaid_insurance;
            
            for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
            balance+=temp.get(i).getbalance();
            }      
            jTextField_total_balance.setText(""+balance);
        }
        
        // FOR LIABILITIES ACCOUNT
        
      
        else if(name.equalsIgnoreCase("Account Payable"))
        {
            Double balance = 0.0;
            ledger_label.setText("Account Payable");
            ledger_no.setText("No. 201");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.account_payable;
            
            for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                balance+=temp.get(i).getbalance(); 
            }       
          jTextField_total_balance.setText(""+balance);
        }
        else if(name.equalsIgnoreCase("Notes Payable"))
        {
            Double balance = 0.0;
            ledger_label.setText("Notes Payable");
            ledger_no.setText("No. 200");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.notes_payable;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                    balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        else if(name.equalsIgnoreCase("Salaries Payable"))
        {
            Double balance = 0.0;
            ledger_label.setText("Salaries Payable");
            ledger_no.setText("No. 202");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.salaries_payable;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
           balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        else if(name.equalsIgnoreCase("Accumalated Depreciation"))
        {
            Double balance = 0.0;
            ledger_label.setText("Accumalated Depreciation");
            ledger_no.setText("No. 158");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.accumalate_depreciation;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
             balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
          
        else if(name.equalsIgnoreCase("Unearned Service Revenue"))
        {
            Double balance = 0.0;
            ledger_label.setText("Unearned Service Revenue");
            ledger_no.setText("No. 209");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.unearned_revenue;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
             balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        else if(name.equalsIgnoreCase("Interest Payable"))
        {
            Double balance = 0.0;
            ledger_label.setText("Interest Payable");
            ledger_no.setText("No. 230");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.unearned_revenue;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
          balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        
        // OWNER'S CAPITAL AND DRAWING
        else if(name.equalsIgnoreCase("Owner's Capital"))
        {
            Double balance = 0.0;
            ledger_label.setText("Owner's Capital");
            ledger_no.setText("No. 301");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.owners_capital;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
             balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        else if(name.equalsIgnoreCase("Owner's Drawing"))
        {
            Double balance = 0.0;
            ledger_label.setText("Owner's Drawing");
            ledger_no.setText("No. 306");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.owners_drawing;
            
           for(int i = 0;i<temp.size();i++)
            {
                
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
             balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        
        // Revenue Account
        else if(name.equalsIgnoreCase("Service Revenue"))
        {
            Double balance = 0.0;
            ledger_label.setText("Service Revenue");
            ledger_no.setText("No. 400");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.service_revenue;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                 balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        else if(name.equalsIgnoreCase("Rent Revenue"))
        {
            Double balance = 0.0;
            ledger_label.setText("Rent Revenue");
            ledger_no.setText("No. 401");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.rent_revenue;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                   balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        
        else if(name.equalsIgnoreCase("Advertising Revenue"))
        {
            Double balance = 0.0;
            ledger_label.setText("Advertising Revenue");
            ledger_no.setText("No. 403");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.advertising_revenue;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                    balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        else if(name.equalsIgnoreCase("Other Revenue"))
        {
            Double balance = 0.0;
            ledger_label.setText("Other Revenue");
            ledger_no.setText("No. 405");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.other_revenue;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                   balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        // Expense Account
        
           
        
        else if(name.equalsIgnoreCase("Supplies Expense"))
        {
            Double balance = 0.0;
            ledger_label.setText("Supplies Expense");
            ledger_no.setText("No. 631");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.supplies_expense;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                    balance+=temp.get(i).getbalance();
            }  
             jTextField_total_balance.setText(""+balance);
        }
        else if(name.equalsIgnoreCase("Insurance Expense"))
        {
            Double balance = 0.0;
             ledger_label.setText("Insurance Expense");
            ledger_no.setText("No. 722");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.insurance_expense;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                    balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
     
        else if(name.equalsIgnoreCase("Salaries Expense"))
        {
            Double balance = 0.0;
            ledger_label.setText("Salaries Expense");
            ledger_no.setText("No. 810");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.salaries_expense;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                    balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        else if(name.equalsIgnoreCase("Interset Expense"))
        {
            Double balance = 0.0;
            ledger_label.setText("Interset Expense");
            ledger_no.setText("No. 905");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.interest_expense;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                    balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
          
        else if(name.equalsIgnoreCase("Rent Expense"))
        {
            Double balance = 0.0;
            ledger_label.setText("Rent Expense");
            ledger_no.setText("No. 720");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.rent_expense;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                    balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        
        else if(name.equalsIgnoreCase("Depreciation Expense"))
        {
            Double balance = 0.0;
             ledger_label.setText("Depreciation Expense");
            ledger_no.setText("No. 734");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.depreciation_expense;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                    balance+=temp.get(i).getbalance();
            }   
             jTextField_total_balance.setText(""+balance);
        }
        else if(name.equalsIgnoreCase("Advertising Expense"))
        {
            Double balance = 0.0;
            ledger_label.setText("Advertising Expense");
            ledger_no.setText("No. 610");
            GeneralJournal f = new GeneralJournal();
            ArrayList<transcation> temp  =new ArrayList();
            
            temp = f.advertising_expense;
            
           for(int i = 0;i<temp.size();i++)
            {
                   DefaultTableModel model = (DefaultTableModel) jTable_ledger.getModel();
                   model.addRow(new Object[]{temp.get(i).getdate(),"", " J1", temp.get(i).getdebit(), temp.get(i).getcredit(),temp.get(i).getbalance()});
                     balance+=temp.get(i).getbalance();
            } 
             jTextField_total_balance.setText(""+balance);
        }
            
    }//GEN-LAST:event_jComboBox_selectActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneralLedger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneralLedger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneralLedger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneralLedger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneralLedger().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox jComboBox_select;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_ledger;
    private javax.swing.JTextField jTextField_total_balance;
    private javax.swing.JLabel ledger_label;
    private javax.swing.JLabel ledger_no;
    // End of variables declaration//GEN-END:variables
}
