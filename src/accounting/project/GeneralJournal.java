/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package accounting.project;

import java.util.ArrayList;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ebad
 */
public class GeneralJournal extends javax.swing.JFrame {

    // ArrayList for Different Accounts
    // Assets SIDE
    public static ArrayList<transcation> cash = new ArrayList();
    public static ArrayList<transcation> equipment = new ArrayList();
    public static ArrayList<transcation> account_recievable = new ArrayList();
    public static ArrayList<transcation> prepaid_insurance = new ArrayList();
    public static ArrayList<transcation> supplies = new ArrayList();

    // LIABLIITES SIDE
    public static ArrayList<transcation> account_payable = new ArrayList();
    public static ArrayList<transcation> notes_payable = new ArrayList();
    public static ArrayList<transcation> salaries_payable = new ArrayList();
    public static ArrayList<transcation> unearned_revenue = new ArrayList();
    public static ArrayList<transcation> accumalate_depreciation = new ArrayList();
    public static ArrayList<transcation> interest_payable = new ArrayList();

    // Capital and Drawing
    public static ArrayList<transcation> owners_capital = new ArrayList();
    public static ArrayList<transcation> owners_drawing = new ArrayList();

    //Revenue Accounts
    public static ArrayList<transcation> service_revenue = new ArrayList();
    public static ArrayList<transcation> advertising_revenue = new ArrayList();
    public static ArrayList<transcation> rent_revenue = new ArrayList();
    public static ArrayList<transcation> other_revenue = new ArrayList();

    //Expense Accounts
    public static ArrayList<transcation> advertising_expense = new ArrayList();
    public static ArrayList<transcation> insurance_expense = new ArrayList();
    public static ArrayList<transcation> supplies_expense = new ArrayList();
    public static ArrayList<transcation> salaries_expense = new ArrayList();
    public static ArrayList<transcation> depreciation_expense = new ArrayList();
    public static ArrayList<transcation> rent_expense = new ArrayList();
    public static ArrayList<transcation> interest_expense = new ArrayList();

    // Assets balance
    public static double cash_balance = 0.0;
    public static double equipement_balance = 0.0;
    public static double account_recievable_balance = 0.0;
    public static double prepaid_insurance_balance = 0.0;
    public static double supplies_balance = 0.0;

    // Liabilites balance
    public static double account_payable_balance = 0.0;
    public static double notes_payable_balance = 0.0;
    public static double salaries_payable_balance = 0.0;
    public static double unearned_revenue_balance = 0.0;
    public static double accumalate_depreciation_balance = 0.0;
    public static double interest_payable_balance = 0.0;

    // Capital and Drawing balance
    public static double owners_capital_balance = 0.0;
    public static double owners_drawing_balance = 0.0;

    // Revenue balance
    public static double servie_revenue_balance = 0.0;
    public static double advertising_revenue_balance = 0.0;
    public static double rent_revenue_balance = 0.0;
    public static double other_revenue_balance = 0.0;

    // Expense balance
    public static double advertising_expense_balance = 0.0;
    public static double insurance_expense_balance = 0.0;
    public static double supplies_expense_balance = 0.0;
    public static double salaries_expense_balance = 0.0;
    public static double depreciation_expense_balance = 0.0;
    public static double rent_expense_balance = 0.0;
    public static double interest_expense_balance = 0.0;

    /**
     * Creates new form NewJFrame
     */
    public GeneralJournal() {
        initComponents();
        this.setLocationRelativeTo(null);
        menu m = new menu();
        String company = m.company_name;
        String date = m.date;

        jLabel_company_name.setText(company);
        jLabel_date.setText(date);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable_Geneal = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel_company_name = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel_date = new javax.swing.JLabel();
        jButton_Ref = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField_total_debit = new javax.swing.JTextField();
        jTextField_total_credit = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField_balance = new javax.swing.JTextField();
        jButton_Done = new javax.swing.JButton();
        jButton_Addrow = new javax.swing.JButton();
        jButton_Save = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("GENERAL JOURNAL");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jTable_Geneal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jTable_Geneal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null,  new Double(0.0),  new Double(0.0)},
                {null, null, null,  new Double(0.0),  new Double(0.0)},
                {null, null, null,  new Double(0.0),  new Double(0.0)},
                {null, null, null,  new Double(0.0),  new Double(0.0)},
                {null, null, null,  new Double(0.0),  new Double(0.0)}
            },
            new String [] {
                "Date", "Account Title & Explanation", "Ref", "                Debit", "                Credit"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable_Geneal.setRowHeight(20);
        jScrollPane1.setViewportView(jTable_Geneal);
        if (jTable_Geneal.getColumnModel().getColumnCount() > 0) {
            jTable_Geneal.getColumnModel().getColumn(0).setMinWidth(70);
            jTable_Geneal.getColumnModel().getColumn(0).setPreferredWidth(70);
            jTable_Geneal.getColumnModel().getColumn(0).setMaxWidth(70);
            jTable_Geneal.getColumnModel().getColumn(1).setPreferredWidth(40);
            jTable_Geneal.getColumnModel().getColumn(2).setMinWidth(40);
            jTable_Geneal.getColumnModel().getColumn(2).setPreferredWidth(40);
            jTable_Geneal.getColumnModel().getColumn(2).setMaxWidth(40);
            jTable_Geneal.getColumnModel().getColumn(3).setResizable(false);
            jTable_Geneal.getColumnModel().getColumn(3).setPreferredWidth(30);
            jTable_Geneal.getColumnModel().getColumn(4).setResizable(false);
            jTable_Geneal.getColumnModel().getColumn(4).setPreferredWidth(30);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(new javax.swing.border.MatteBorder(null));
        jPanel2.setForeground(new java.awt.Color(204, 204, 204));

        jLabel_company_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_company_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_company_name.setText("  THE COMPANY PRIVATE LIMITED");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("GENERAL JOURNAL");

        jLabel_date.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel_date.setText("For the month ended 30 September,2012");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel_company_name, javax.swing.GroupLayout.DEFAULT_SIZE, 316, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel_company_name, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel_date, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                .addContainerGap())
        );

        jButton_Ref.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton_Ref.setText("Ref");
        jButton_Ref.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_RefActionPerformed(evt);
            }
        });

        jLabel4.setText("Total Debit");

        jLabel5.setText("Total Credit");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextField_total_debit)
                    .addComponent(jTextField_total_credit, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE))
                .addContainerGap(32, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jTextField_total_debit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_total_credit, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jLabel6.setText("Out of Balance");

        jTextField_balance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_balanceActionPerformed(evt);
            }
        });

        jButton_Done.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton_Done.setText("CHECK");
        jButton_Done.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_DoneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton_Done, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_balance, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_balance, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(jButton_Done)
                .addContainerGap())
        );

        jButton_Addrow.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton_Addrow.setText("Add Row");
        jButton_Addrow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_AddrowActionPerformed(evt);
            }
        });

        jButton_Save.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        jButton_Save.setText("Save");
        jButton_Save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_SaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(59, 59, 59)
                        .addComponent(jButton_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_Addrow, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(72, 72, 72)
                                .addComponent(jButton_Ref, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton_Ref)
                    .addComponent(jButton_Addrow))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButton_Save, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 96, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton_DoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_DoneActionPerformed

        //Object obji = GetData(jTable_Geneal,1,1);
        // String s = obji.toString();
        // int count =0;
        //count =jTable_Geneal.getRowCount();
        //jTextField_total_debit.setText("");
        Double BALANCE = 0.0;
        BALANCE += gettotaldebit(jTable_Geneal);
        jTextField_total_debit.setText("" + BALANCE);

        Double BALANCE2 = 0.0;
        BALANCE2 += gettotalcredit(jTable_Geneal);
        jTextField_total_credit.setText("" + BALANCE2);

        //jTextField_balance
        Double outofbalance = 0.0;
        outofbalance = BALANCE - BALANCE2;
        jTextField_balance.setText("" + outofbalance);


    }//GEN-LAST:event_jButton_DoneActionPerformed

    // To Get Total Balance
    public double gettotaldebit(JTable table) {
        double balance = 0.0;

        for (int i = 0; i < table.getRowCount(); i++) {

            if ((Double) table.getModel().getValueAt(i, 3) != null) {
                balance = ((double) table.getModel().getValueAt(i, 3)) + balance;
            }
        }

        return balance;
    }

    public double gettotalcredit(JTable table) {
        double balance = 0.0;

        for (int i = 0; i < table.getRowCount(); i++) {

            if ((Double) table.getModel().getValueAt(i, 4) != null) {
                balance = ((double) table.getModel().getValueAt(i, 4)) + balance;
            }

        }

        return balance;
    }

    public Object GetData(JTable table, int row_index, int col_index) {

        return table.getModel().getValueAt(row_index, col_index);
    }

    private void jButton_RefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_RefActionPerformed
        // TODO add your handling code here:

        Reference frame = new Reference();
        frame.setVisible(true);
    }//GEN-LAST:event_jButton_RefActionPerformed

    private void jTextField_balanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_balanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_balanceActionPerformed

    private void jButton_AddrowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_AddrowActionPerformed
        // TODO add your handling code here:

        DefaultTableModel model = (DefaultTableModel) jTable_Geneal.getModel();

        model.addRow(new Object[]{"", "", 0, 0.0, 0.0});

    }//GEN-LAST:event_jButton_AddrowActionPerformed

    private void jButton_SaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_SaveActionPerformed

        int refid = 0;

        
        
        for (int i = 0; i < jTable_Geneal.getRowCount(); i++) {
            if (((Integer) jTable_Geneal.getModel().getValueAt(i, 2) != null)) {
                refid = ((Integer) jTable_Geneal.getModel().getValueAt(i, 2));

                // FOR ASSETS ACCOUNTS
                if (refid == 101) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        cash_balance += debit;
                    } else if (credit != 0.0) {
                        cash_balance -= credit;
                    }

                    cash.add(new transcation(date, debit, credit, cash_balance));
                } else if (refid == 120) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        account_recievable_balance += debit;
                    } else if (credit != 0.0) {
                        account_recievable_balance -= credit;
                    }

                    account_recievable.add(new transcation(date, debit, credit, account_recievable_balance));
                } else if (refid == 157) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        equipement_balance += debit;
                    } else if (credit != 0.0) {
                        equipement_balance -= credit;
                    }

                    equipment.add(new transcation(date, debit, credit, equipement_balance));
                } else if (refid == 130) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        prepaid_insurance_balance += debit;
                    } else if (credit != 0.0) {
                        prepaid_insurance_balance -= credit;
                    }

                    prepaid_insurance.add(new transcation(date, debit, credit, prepaid_insurance_balance));
                } else if (refid == 126) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        supplies_balance += debit;
                    } else if (credit != 0.0) {
                        supplies_balance -= credit;
                    }

                    supplies.add(new transcation(date, debit, credit, supplies_balance));
                } // FOR LIABLITIES ACCOUNTS
                else if (refid == 201) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        account_payable_balance += debit;
                    } else if (credit != 0.0) {
                        account_payable_balance -= credit;
                    }

                    account_payable.add(new transcation(date, debit, credit, account_payable_balance));
                } else if (refid == 200) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        notes_payable_balance += debit;
                    } else if (credit != 0.0) {
                        notes_payable_balance -= credit;
                    }

                    notes_payable.add(new transcation(date, debit, credit, notes_payable_balance));
                } else if (refid == 202) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        salaries_payable_balance += debit;
                    } else if (credit != 0.0) {
                        salaries_payable_balance -= credit;
                    }

                    salaries_payable.add(new transcation(date, debit, credit, salaries_payable_balance));
                } else if (refid == 230) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        interest_payable_balance += debit;
                    } else if (credit != 0.0) {
                        interest_payable_balance -= credit;
                    }

                    interest_payable.add(new transcation(date, debit, credit, interest_payable_balance));
                } else if (refid == 209) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        unearned_revenue_balance += debit;
                    } else if (credit != 0.0) {
                        unearned_revenue_balance -= credit;
                    }

                    unearned_revenue.add(new transcation(date, debit, credit, unearned_revenue_balance));
                } else if (refid == 158) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        accumalate_depreciation_balance += debit;
                    } else if (credit != 0.0) {
                        accumalate_depreciation_balance -= credit;
                    }

                    accumalate_depreciation.add(new transcation(date, debit, credit, accumalate_depreciation_balance));
                } //For OWNER'S CAPITAL AND DRAWING ACCOUNT
                else if (refid == 301) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        owners_capital_balance += debit;
                    } else if (credit != 0.0) {
                        owners_capital_balance -= credit;
                    }

                    owners_capital.add(new transcation(date, debit, credit, owners_capital_balance));
                } else if (refid == 306) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        owners_drawing_balance += debit;
                    } else if (credit != 0.0) {
                        owners_drawing_balance -= credit;
                    }

                    owners_drawing.add(new transcation(date, debit, credit, owners_drawing_balance));
                } // FOR REVENUE ACCOUNTS
                else if (refid == 400) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        servie_revenue_balance += debit;
                    } else if (credit != 0.0) {
                        servie_revenue_balance -= credit;
                    }
                    service_revenue.add(new transcation(date, debit, credit, servie_revenue_balance));
                } else if (refid == 401) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        rent_revenue_balance += debit;
                    } else if (credit != 0.0) {
                        rent_revenue_balance -= credit;
                    }
                    rent_revenue.add(new transcation(date, debit, credit, rent_revenue_balance));
                } else if (refid == 403) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        advertising_revenue_balance += debit;
                    } else if (credit != 0.0) {
                        advertising_revenue_balance -= credit;
                    }
                    advertising_revenue.add(new transcation(date, debit, credit, advertising_revenue_balance));
                } else if (refid == 405) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        other_revenue_balance += debit;
                    } else if (credit != 0.0) {
                        other_revenue_balance -= credit;
                    }
                    other_revenue.add(new transcation(date, debit, credit, other_revenue_balance));
                } // FOR EXPENSE ACCOUNTS
                else if (refid == 631) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        supplies_expense_balance += debit;
                    } else if (credit != 0.0) {
                        supplies_expense_balance -= credit;
                    }
                    supplies_expense.add(new transcation(date, debit, credit, supplies_expense_balance));
                } else if (refid == 722) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        insurance_expense_balance += debit;
                    } else if (credit != 0.0) {
                        insurance_expense_balance -= credit;
                    }
                    insurance_expense.add(new transcation(date, debit, credit, insurance_expense_balance));
                } else if (refid == 810) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        salaries_expense_balance += debit;
                    } else if (credit != 0.0) {
                        salaries_expense_balance -= credit;
                    }
                    salaries_expense.add(new transcation(date, debit, credit, salaries_expense_balance));
                } else if (refid == 905) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        interest_expense_balance += debit;
                    } else if (credit != 0.0) {
                        interest_expense_balance -= credit;
                    }
                    interest_expense.add(new transcation(date, debit, credit, interest_expense_balance));
                } else if (refid == 720) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        rent_expense_balance += debit;
                    } else if (credit != 0.0) {
                        rent_expense_balance -= credit;
                    }
                    rent_expense.add(new transcation(date, debit, credit, rent_expense_balance));
                } else if (refid == 610) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        advertising_expense_balance += debit;
                    } else if (credit != 0.0) {
                        advertising_expense_balance -= credit;
                    }
                    advertising_expense.add(new transcation(date, debit, credit, advertising_expense_balance));
                } else if (refid == 734) {
                    String date;
                    double debit, credit;

                    date = ((String) jTable_Geneal.getModel().getValueAt(i, 0));
                    debit = ((Double) jTable_Geneal.getModel().getValueAt(i, 3));
                    credit = ((Double) jTable_Geneal.getModel().getValueAt(i, 4));

                    if (debit != 0.0) {
                        depreciation_expense_balance += debit;
                    } else if (credit != 0.0) {
                        depreciation_expense_balance -= credit;
                    }
                    depreciation_expense.add(new transcation(date, debit, credit, depreciation_expense_balance));
                }

            }

        }
        
        
        int getrowcount= jTable_Geneal.getRowCount();

        System.out.println(cash_balance);
        System.out.println(account_payable_balance);
        System.out.println(equipement_balance);
        System.out.println(servie_revenue_balance);


    }//GEN-LAST:event_jButton_SaveActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneralJournal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneralJournal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneralJournal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneralJournal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneralJournal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_Addrow;
    private javax.swing.JButton jButton_Done;
    private javax.swing.JButton jButton_Ref;
    private javax.swing.JButton jButton_Save;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel_company_name;
    private javax.swing.JLabel jLabel_date;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable_Geneal;
    private javax.swing.JTextField jTextField_balance;
    private javax.swing.JTextField jTextField_total_credit;
    private javax.swing.JTextField jTextField_total_debit;
    // End of variables declaration//GEN-END:variables
}
